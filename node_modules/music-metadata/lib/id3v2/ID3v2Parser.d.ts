/// <reference types="node" />
import { ITokenizer } from "strtok3";
import { IOptions } from "../";
import { INativeAudioMetadata } from "../index";
export declare class ID3v2Parser {
    static getInstance(): ID3v2Parser;
    static removeUnsyncBytes(buffer: Buffer): Buffer;
    private static readFrameHeader(v, majorVer);
    private static getFrameHeaderLength(majorVer);
    private static readFrameFlags(b);
    private static readFrameData(buf, frameHeader, majorVer, includeCovers);
    /**
     * Create a combined tag key, of tag & description
     * @param {string} tag e.g.: COM
     * @param {string} description e.g. iTunPGAP
     * @returns {string} e.g. COM:iTunPGAP
     */
    private static makeDescriptionTagName(tag, description);
    private tokenizer;
    private id3Header;
    private tags;
    private headerType;
    private options;
    parse(result: INativeAudioMetadata, tokenizer: ITokenizer, options: IOptions): Promise<void>;
    parseExtendedHeader(): Promise<void>;
    parseExtendedHeaderData(dataRemaining: number, extendedHeaderSize: number): Promise<void>;
    parseId3Data(dataLen: number): Promise<void>;
    private parseMetadata(data);
}
